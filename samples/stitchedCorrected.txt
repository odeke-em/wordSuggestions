ThresholdMatch percentage: 0.75
author {
}
emmanuel {
}
odeke {
}
ualberta {
}
ca {
}
ifndef {
}
errors {
}
h {
	ho :: 1
	hn :: 1
	hi :: 1
	ha :: 1
}
define {
}
include {
}
stdio {
}
typedef {
	typed :: 10
}
enum {
	neum :: 6
}
typeerror {
}
valueerror {
}
indexerror {
}
syntaxerror {
}
bufferoverflow {
}
assertionerror {
}
nullpointerexception {
}
indexoutofboundsexception {
}
zerodivisionexception {
}
corrupteddataexception {
}
exception {
}
raisewarning {
}
errmsg {
}
fprintf {
}
stderr {
}
m {
}
on {
}
line {
}
function {
}
file {
}
throwexception {
}
errcode {
}
exit {
}
validexpression {
}
raiseerror {
}
args {
	argus :: 6
	rags :: 6
}
traceback {
}
most {
}
recent {
}
call {
}
at {
}
of {
}
raiseexceptionifnull {
}
expression {
}
endif {
}
hashlist {
}
init {
	inti :: 6
}
list {
}
size {
}
int {
	intro :: 4
	intis :: 4
	intil :: 4
	inter :: 4
	into :: 5
	inti :: 5
	inte :: 5
	anti :: 4
	nit :: 4
	in :: 4
}
hashvalue {
}
false {
}
true {
}
bool {
	obol :: 6
	bolo :: 6
	boo :: 6
}
struct {
	strunt :: 9
	struck :: 9
	strict :: 9
	strut :: 9
	structure :: 9
}
element {
}
void {
}
next {
}
capacity {
}
size {
}
returns {
}
the {
}
entry {
}
is {
}
non {
}
inline {
}
hasnext {
	hasten :: 10
}
attribute {
}
accessor {
	access :: 12
	accessory :: 15
	accessary :: 12
}
getnext {
}
getsize {
}
hl {
}
initelement {
}
inithashlistwithsize {
}
const {
	coost :: 7
	coast :: 7
	canst :: 7
	construe :: 7
	constate :: 7
	constant :: 7
	consult :: 7
	consort :: 7
	consist :: 7
	consent :: 7
	conatus :: 7
	counts :: 7
	contos :: 7
	contes :: 7
	tons :: 7
	cots :: 7
	cons :: 8
}
size {
}
addtohead {
}
sl {
}
data {
}
addtotail {
}
overwriteondup {
}
hashcode {
}
pop {
}
hm {
}
number {
}
values {
}
freed {
}
long {
}
destroyslist {
}
destroyhashlist {
}
miscellaneous {
}
pjwcharhash {
}
char {
}
srcw {
}
hlru {
	hurl :: 6
}
cache {
}
lru {
	lour :: 4
	lur :: 4
}
mutex {
	mutes :: 7
	muted :: 7
	murex :: 7
	mute :: 8
}
cond {
}
pair {
}
pthread {
}
condvar {
}
mutexcondpair {
}
allocmutexcondpair {
}
freemutexcond {
}
mcpair {
}
initmutexcondpair {
}
scrooge {
}
consumerlist {
}
unsigned {
}
maxcapacity {
}
consumercount {
}
mutexcondlist {
}
workgenerate {
}
producer {
}
allocproducer {
}
initproducer {
}
insertjob {
}
job {
}
jobid {
}
implementation {
}
stdlib {
}
string {
}
ifdef {
}
debug {
}
undef {
	undefied :: 7
	unfed :: 8
	under :: 7
	undee :: 7
	undeify :: 7
	unde :: 8
	unfeed :: 7
	undeaf :: 8
}
handle {
}
collisions {
}
exhibit {
}
by {
}
reference {
}
getsize {
}
size {
}
else {
}
do {
}
something {
}
interesting {
	interest :: 16
}
eg {
	ego :: 3
	egg :: 3
}
store {
}
visits {
}
newelem {
	newel :: 10
}
malloc {
	mallecho :: 9
	mallow :: 9
}
sizeof {
}
inithashlistwithsize {
}
size {
}
sizeof {
}
size {
}
size {
}
size {
}
printf {
	print :: 10
	prints :: 9
}
size {
}
sizeof {
}
size {
}
run {
}
out {
}
memory {
}
trying {
}
to {
}
create {
}
space {
}
for {
}
elements {
}
set {
}
listiter {
}
size {
}
while {
}
lit {
}
inithashlistwithsize {
}
size {
}
insertelem {
}
cannot {
}
size {
}
size {
}
zero {
}
initializing {
	initialing :: 18
}
it {
}
now {
}
size {
}
elemindex {
}
size {
}
we {
}
ve {
	vex :: 3
	vet :: 3
	veg :: 3
}
found {
}
first {
}
matching {
}
that {
}
always {
}
update {
}
latest {
}
size {
}
size {
}
nvaluefrees {
}
tmp {
}
freeing {
}
curhead {
	cupheads :: 10
	cuphead :: 11
}
pelement {
}
getsize {
}
calcindex {
	calcine :: 13
	calcined :: 14
}
getsize {
}
hpelement {
}
size {
}
hashing {
}
algorithm {
}
srclen {
}
strlen {
	stolen :: 9
}
sizeof {
}
xf {
}
sample {
}
main {
}
hsize {
	chizes :: 7
}
inithashlistwithsize {
}
hsize {
	chizes :: 7
}
inithashlistwithsize {
}
hsize {
	chizes :: 7
}
hsize {
	chizes :: 7
}
sizeof {
}
fnd {
}
curholder {
}
htest {
}
popd {
}
with {
}
default {
}
size {
}
destroyhlru {
}
inithashlistwithsize {
}
size {
}
execifnotnull {
}
var {
	varve :: 4
	varus :: 4
	varna :: 4
	varix :: 4
	vares :: 4
	vardy :: 4
	varec :: 4
	varas :: 4
	vary :: 5
	vare :: 5
	vara :: 5
	vair :: 4
}
sizeof {
}
sizeof {
}
inithashlistwithsize {
}
sizeof {
}
destroyproducer {
}
mindex {
	minder :: 9
	minded :: 9
}
generatedata {
	generated :: 18
}
googre {
	google :: 9
}
intptr {
}
sizeof {
}
minserting {
}
