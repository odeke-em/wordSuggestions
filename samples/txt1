 *)malloc(sizeof(navigatorList));

  return navList;
}

size_t getFileSize(FILE *fp){
  if (fp == NULL) return EOF;

  const size_t originalPosition = ftell(fp);

  //Moving read head to the end of the file
  fseek(fp, 0L, SEEK_END);

  const size_t fSize = ftell(fp);
  
  //Moving back to the original position
  fseek(fp, originalPosition, SEEK_SET);

  return fSize;
}

void initNavList(navigatorList *navContainer, const int *n){
  if (navContainer == NULL){
    fprintf(
      stderr, "Error: Null navigatorlist passed in for initialization\n"
    );
    exit(-2);
  }
  navContainer->srcfp = NULL;
  navContainer->nPartitions = *n;
  navContainer->navList = (navigator *)malloc(sizeof(navigator)*(*n));
}

void navListFree(navigatorList *navL){
  if (navL == NULL) return;
  int i;
  for (i=0; i<navL->nPartitions; ++i){
    navFree(&(navL->navList[i]));
  }
  if (navL->navList != NULL) free(navL->navList);
  free(navL);
}

void initNavigator(navigator *nav){
  if (nav == NULL){
    fprintf(
      stderr, "Error: Null navigator struct passed in for initialization\n"
    );
    exit(-2);
  }
  nav->start = 0;
  nav->end   = 0;
  nav->srcfp = NULL;
  nav->toPath = NULL;
  nav->fileSize = 0;
}

void setNavigator(
  navigator *nav, FILE *tfp, const int *start, const int *end, const word path
  ){
  if (nav == NULL){
    fprintf(stderr, "Null navigator struct passed in %s\n", __func__);
  }

  nav->srcfp = tfp;
  nav->start = *start;
  nav->end   = *end;
  nav->fileSize = getFileSize(tfp);
  nav->toPath = strdup(path);
}

int getFragmentSize(const navigator *nav) {