s func s n srcpath func endif { 
	enfiled:11 enfixed:11 
} word learntpath newword { 
	browned:16 crowned:16 drowned:16 drowner:15 frowned:16 keyword:15 
	nayword:15 network:15 networked:17 
} pathlen { 
	enthalpy:15 pathless:15 phthalein:15 
} word correctedpath { 
	porrected:30 
} newword pathlen sprintf { 
	sprint:17 sprinted:15 sprinter:15 sprints:16 
} learntpath sl srcpath sprintf correctedpath sc srcpath file srcfp fopen srcpath r file words learnt ifp fopen learntpath r w file correctedfp { 
	corrected:25 perfector:24 porrect:24 porrected:28 
} fopen correctedpath w wordarraystruct dictwarrstruct nav { 
	naval:7 nave:8 navel:7 naves:7 navew:7 navvy:7 navy:8 nova:7 
	van:7 
} dictwarraystruct if words learnt ifp null words learnt ifp fopen learntpath w node storage null while feof { 
	feoff:11 feoffed:9 feoffee:9 feoffer:9 feoffor:9 feoffs:10 
	reffo:9 
} srcfp word srcword { 
	cowbirds:15 cowherds:15 
} getword srcfp isalpha { 
	silphia:15 
} if srcword null continue word comparison will be done in lower case tolower { 
	thrower:15 
} srcword ifdef { 
	fifed:11 
} debug fprintf stderr { 
	duster:13 sidetrack:13 starred:14 statured:13 steward:14 
	stewards:13 stirred:14 tedders:13 
} srcword s n srcword endif wordmatchcriteria matchcriteria matchcriteria lenmatch bool { 
	blood:9 bloom:9 bloop:9 bodle:10 bodles:9 bogle:10 bogles:9 
	boil:11 boiled:9 boiler:9 boils:10 bola:10 bolas:9 bold:10 bole:10 
	boles:9 boll:11 bolled:9 bollen:9 bollix:9 bolls:10 bolo:10 bolos:9 
	bolt:10 bolts:9 bolus:9 boodle:9 boolean:9 borel:9 botel:9 boule:10 
	boules:9 boulle:9 boult:10 boults:9 bowel:9 bowl:11 bowled:9 bowler:9 
	bowls:10 brool:9 coble:9 lob:10 lobe:9 lobi:9 lobo:9 lobs:9 looby:9 
	moble:9 noble:9 nobly:9 obol:10 oboli:9 obols:9 roble:9 
} false matchcriteria firstlettermatch bool false storage getsuggestions dictwarrstruct correctedfp storage srcword matchcriteria if srcword null free srcword time to write to memory matched words fprintf words learnt ifp words learnt from examining file s n srcpath if serializenode { 
	normalized:28 normalizes:28 
} storage words learnt ifp true fprintf stderr mwrote the learnt words to file s m n learntpath and give unto os what belongs to os release memory nodefree { 
	conferred:18 forenamed:18 forfended:17 forhented:17 foundered:17 
	unoffered:17 
} storage free learntpath free correctedpath fclose { 
	filose:13 
} srcfp fclose correctedfp fclose words learnt ifp return null 